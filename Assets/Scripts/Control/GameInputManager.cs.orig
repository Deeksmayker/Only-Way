using System;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.InputSystem;

namespace Control
{
    public class GameInputManager : MonoBehaviour
    {
	    [Header("Character Input Values")]
        public Vector2 move;
        public Vector2 look;
        public bool jump;
        public bool sprint;

        [Header("Movement Settings")]
        public bool analogMovement;


        [Header("Mouse Cursor Settings")]
        public bool cursorLocked = true;
        public bool cursorInputForLook = true;
        
        public void OnMove(InputValue value)
		{
			MoveInput(value.Get<Vector2>());
		}

		public void OnLook(InputValue value)
		{
			if(cursorInputForLook)
			{
				LookInput(value.Get<Vector2>());
			}
		}

		public void OnJump(InputValue value)
		{
			JumpInput(value.isPressed);
		}

		public void OnSprint(InputValue value)
		{
			SprintInput(value.isPressed);
		}

		public void MoveInput(Vector2 newMoveDirection)
        {
            move = newMoveDirection;
        } 

        public void LookInput(Vector2 newLookDirection)
        {
            look = newLookDirection;
        }

        public void JumpInput(bool newJumpState)
        {
            jump = newJumpState;
        }

        public void SprintInput(bool newSprintState)
        {
            sprint = newSprintState;
        }

<<<<<<< HEAD
        private void Update()
        {
            CheckJumpInputs();
        }

        public Vector2 GetPlayerMovementRaw()
        {
            return _playerControls.MovementRaw.ReadValue<Vector2>();
        }

        public Vector2 GetPlayerMovement()
        {
            return _playerControls.Movement.ReadValue<Vector2>();
        }

        public Vector2 GetMouseDelta()
        {
            return _playerControls.Look.ReadValue<Vector2>();
        }

        public void CheckJumpInputs()
=======
        /*public void CheckJumpInputs()
>>>>>>> test
        {
            if (_playerControls.Jump.WasPressedThisFrame())
                OnJumpButtonDown.Invoke();
            if (_playerControls.Jump.WasReleasedThisFrame())
                OnJumpButtonUp.Invoke();
        }*/
    }
}